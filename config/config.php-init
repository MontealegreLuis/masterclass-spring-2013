<?php
use \Observer\IsAuthenticatedObserver;
use \Utils\Validator;
use \Http\Request;
use \Http\Response;
use \View\View;
use \Database\Table\UserGateway;
use \Model\User;
use \Controller\UserController;
use \Database\Table\StoryGateway;
use \Controller\StoryController;
use \Model\Story;
use \Controller\IndexController;
use \Database\Table\CommentGateway;
use \Model\Comment;
use \Controller\CommentController;
use \Di\Container;
use \Router\DefaultRouter;
use \Session\Session;
use \Database\Driver\PdoMySqlDriver;

return array(
    'router' => function(Container $container) {
        return new DefaultRouter($container->get('routes'));
    },
    'routes' => array(
        '' => 'index/index',
        'story' => 'story/index',
        'story/create' => 'story/create',
        'comment/create' => 'comment/create',
        'user/create' => 'user/create',
        'user/account' => 'user/account',
        'user/login' => 'user/login',
        'user/logout' => 'user/logout',
    ),
    'session' => function() {
        return new Session();
    },
    'db_driver' => function() {
        return new PdoMySqlDriver();
    },
    'connection' => function(Container $container) {
        $driver = $container->get('db_driver');
        extract($container->get('connection_params'));

        return $driver->connect($username, $password, $params);
    },
    'connection_params' => array(
        'username' => 'news_user',
        'password' => 'n3ws_us3r',
        'params' => array(
            'host' => 'localhost',
            'dbname' => 'upvote_news',
        ),
    ),
    'view' => function() {
        $view = new View(realpath('view'));
        $view->setLayout('layouts/layout.phtml');

        return $view;
    },
    'request' => function() {
        return new Request();
    },
    'response' => function() {
        return new Response();
    },
    'validator' => function () {
        return new Validator();
    },
    'is_auth_observer' => function() {
        return new IsAuthenticatedObserver();
    },
    'Controller\CommentController' => function(Container $c) {
        $controller = new CommentController(
            $c->get('request'), $c->get('response'), $c->get('session')
        );
        $comment = new Comment($c->get('validator'), $c->get('comment_gateway'));
        $controller->setComment($comment);
        $controller->attach($c->get('is_auth_observer'));

        return $controller;
    },
    'comment_gateway' => function(Container $c) {
        return new CommentGateway($c->get('connection'));
    },
    'Controller\UserController' => function(Container $c) {
        $controller = new UserController(
            $c->get('request'), $c->get('response'), $c->get('session')
        );
        $user = new User($c->get('validator'), $c->get('user_gateway'));
        $controller->setUser($user);

        return $controller;
    },
    'user_gateway' => function(Container $c) {
        return new UserGateway($c->get('connection'));
    },
    'Controller\IndexController' => function(Container $c) {
        $controller = new IndexController(
            $c->get('request'), $c->get('response'), $c->get('session')
        );
        $story = new Story($c->get('validator'), $c->get('story_gateway'));
        $controller->setStory($story);
        $controller->attach($c->get('is_auth_observer'));

        return $controller;
    },
    'Controller\StoryController' => function(Container $c) {
        $controller = new StoryController(
            $c->get('request'), $c->get('response'), $c->get('session')
        );
        $story = new Story($c->get('validator'), $c->get('story_gateway'));
        $controller->setStory($story);
        $controller->attach($c->get('is_auth_observer'));

        return $controller;
    },
    'story_gateway' => function(Container $c) {
        return new StoryGateway($c->get('connection'));
    },
);